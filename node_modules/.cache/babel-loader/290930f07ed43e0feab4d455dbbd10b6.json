{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { sortTypes } from './types';\nimport { findCategories } from './asyncActions';\nconst initialState = {\n  searchValue: '',\n  categories: [],\n  activeCategory: null,\n  sortTypes: sortTypes,\n  activeSortType: null\n};\nconst filterSlice = createSlice({\n  name: 'filter',\n  initialState,\n  reducers: {\n    setActiveCategory(state, action) {\n      state.activeCategory = action.payload;\n    },\n\n    setActiveSortType(state, action) {\n      state.activeSortType = action.payload;\n    },\n\n    setSearchValue(state, action) {\n      state.searchValue = action.payload;\n    }\n\n  },\n  extraReducers: builder => {\n    builder.addCase(findCategories.fulfilled, (state, action) => {\n      state.activeCategory = null;\n      state.searchValue = '';\n      state.categories = action.payload.sort((a, b) => b.count - a.count).slice(0, 5);\n    });\n  }\n});\nexport const {\n  setActiveCategory,\n  setActiveSortType,\n  setSearchValue\n} = filterSlice.actions;\nexport default filterSlice.reducer;","map":{"version":3,"names":["createSlice","sortTypes","findCategories","initialState","searchValue","categories","activeCategory","activeSortType","filterSlice","name","reducers","setActiveCategory","state","action","payload","setActiveSortType","setSearchValue","extraReducers","builder","addCase","fulfilled","sort","a","b","count","slice","actions","reducer"],"sources":["/Users/kirillkarpakov/WebstormProjects/client-pr/src/store/filter/slice.ts"],"sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { IFilterSliceState, sortTypes } from './types';\nimport { findCategories } from './asyncActions';\n\n\nconst initialState: IFilterSliceState = {\n\tsearchValue: '',\n\tcategories: [],\n\tactiveCategory: null,\n\tsortTypes: sortTypes,\n\tactiveSortType: null\n};\n\nconst filterSlice = createSlice({\n\tname: 'filter',\n\tinitialState,\n\treducers: {\n\t\tsetActiveCategory(state, action: PayloadAction<string | null>) {\n\t\t\tstate.activeCategory = action.payload;\n\t\t},\n\t\tsetActiveSortType(state, action: PayloadAction<string>) {\n\t\t\tstate.activeSortType = action.payload;\n\t\t},\n\t\tsetSearchValue(state, action: PayloadAction<string>) {\n\t\t\tstate.searchValue = action.payload;\n\t\t}\n\t},\n\textraReducers: (builder) => {\n\t\tbuilder.addCase(findCategories.fulfilled, (state, action) => {\n\t\t\tstate.activeCategory = null;\n\t\t\tstate.searchValue = '';\n\t\t\tstate.categories = action.payload.sort((a, b) => b.count - a.count).slice(0, 5);\n\t\t});\n\t}\n});\n\nexport const {setActiveCategory, setActiveSortType, setSearchValue} = filterSlice.actions;\nexport default filterSlice.reducer;"],"mappings":"AAAA,SAASA,WAAT,QAA2C,kBAA3C;AACA,SAA4BC,SAA5B,QAA6C,SAA7C;AACA,SAASC,cAAT,QAA+B,gBAA/B;AAGA,MAAMC,YAA+B,GAAG;EACvCC,WAAW,EAAE,EAD0B;EAEvCC,UAAU,EAAE,EAF2B;EAGvCC,cAAc,EAAE,IAHuB;EAIvCL,SAAS,EAAEA,SAJ4B;EAKvCM,cAAc,EAAE;AALuB,CAAxC;AAQA,MAAMC,WAAW,GAAGR,WAAW,CAAC;EAC/BS,IAAI,EAAE,QADyB;EAE/BN,YAF+B;EAG/BO,QAAQ,EAAE;IACTC,iBAAiB,CAACC,KAAD,EAAQC,MAAR,EAA8C;MAC9DD,KAAK,CAACN,cAAN,GAAuBO,MAAM,CAACC,OAA9B;IACA,CAHQ;;IAITC,iBAAiB,CAACH,KAAD,EAAQC,MAAR,EAAuC;MACvDD,KAAK,CAACL,cAAN,GAAuBM,MAAM,CAACC,OAA9B;IACA,CANQ;;IAOTE,cAAc,CAACJ,KAAD,EAAQC,MAAR,EAAuC;MACpDD,KAAK,CAACR,WAAN,GAAoBS,MAAM,CAACC,OAA3B;IACA;;EATQ,CAHqB;EAc/BG,aAAa,EAAGC,OAAD,IAAa;IAC3BA,OAAO,CAACC,OAAR,CAAgBjB,cAAc,CAACkB,SAA/B,EAA0C,CAACR,KAAD,EAAQC,MAAR,KAAmB;MAC5DD,KAAK,CAACN,cAAN,GAAuB,IAAvB;MACAM,KAAK,CAACR,WAAN,GAAoB,EAApB;MACAQ,KAAK,CAACP,UAAN,GAAmBQ,MAAM,CAACC,OAAP,CAAeO,IAAf,CAAoB,CAACC,CAAD,EAAIC,CAAJ,KAAUA,CAAC,CAACC,KAAF,GAAUF,CAAC,CAACE,KAA1C,EAAiDC,KAAjD,CAAuD,CAAvD,EAA0D,CAA1D,CAAnB;IACA,CAJD;EAKA;AApB8B,CAAD,CAA/B;AAuBA,OAAO,MAAM;EAACd,iBAAD;EAAoBI,iBAApB;EAAuCC;AAAvC,IAAyDR,WAAW,CAACkB,OAA3E;AACP,eAAelB,WAAW,CAACmB,OAA3B"},"metadata":{},"sourceType":"module"}
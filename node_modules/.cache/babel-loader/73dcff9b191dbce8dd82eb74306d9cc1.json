{"ast":null,"code":"import { sortTypes } from '../../filter/types';\nexport const findPizzasByFilters = (items, filters) => {\n  var _sortTypes$find, _sortTypes$find2;\n\n  const sortField = (_sortTypes$find = sortTypes.find(item => item.name === filters.sortType)) === null || _sortTypes$find === void 0 ? void 0 : _sortTypes$find.sortProperty.replace('-', '');\n  const orderType = (_sortTypes$find2 = sortTypes.find(item => item.name === filters.sortType)) === null || _sortTypes$find2 === void 0 ? void 0 : _sortTypes$find2.sortProperty.includes('-');\n  let newPizzas = [...items];\n\n  if (filters.category !== null) {\n    newPizzas = newPizzas.filter(item => item.category === filters.category);\n  }\n\n  if (sortField === 'rating') {\n    newPizzas = newPizzas.sort((a, b) => orderType ? a.rating - b.rating : b.rating - a.rating);\n  } else if (sortField === 'title') {\n    newPizzas = newPizzas.sort((a, b) => orderType ? b.title.toLowerCase() >= a.title.toLowerCase() ? 1 : -1 : a.title.toLowerCase() >= b.title.toLowerCase() ? 1 : -1);\n  } else if (sortField === 'price') {\n    newPizzas = newPizzas.sort((a, b) => orderType ? a.price - b.price : b.price - a.price);\n  }\n\n  if (filters.searchText) {\n    const findExpression = new RegExp(`${filters.searchText}`, 'i');\n    newPizzas = newPizzas.filter(item => findExpression.test(item.title));\n  }\n\n  return newPizzas;\n};","map":{"version":3,"names":["sortTypes","findPizzasByFilters","items","filters","sortField","find","item","name","sortType","sortProperty","replace","orderType","includes","newPizzas","category","filter","sort","a","b","rating","title","toLowerCase","price","searchText","findExpression","RegExp","test"],"sources":["/Users/kirillkarpakov/WebstormProjects/client-pr/src/store/pizza/utils/find-pizzas-by-filters.ts"],"sourcesContent":["import { IPizzaView, ISetPizzasByFilters } from '../types';\nimport { sortTypes } from '../../filter/types';\n\n\nexport const findPizzasByFilters = (items: IPizzaView[], filters: ISetPizzasByFilters): IPizzaView[] => {\n\tconst sortField = sortTypes.find(item => item.name === filters.sortType)?.sortProperty.replace('-', '');\n\tconst orderType = sortTypes.find(item => item.name === filters.sortType)?.sortProperty.includes('-');\n\n\tlet newPizzas: IPizzaView[] = [...items];\n\n\tif (filters.category !== null) {\n\t\tnewPizzas = newPizzas.filter(item => item.category === filters.category);\n\t}\n\n\tif (sortField === 'rating') {\n\t\tnewPizzas = newPizzas.sort((a, b) => orderType ?\n\t\t\ta.rating - b.rating :\n\t\t\tb.rating - a.rating\n\t\t);\n\t} else if (sortField === 'title') {\n\t\tnewPizzas = newPizzas.sort((a, b) => orderType ?\n\t\t\t(b.title.toLowerCase() >= a.title.toLowerCase() ? 1 : -1) :\n\t\t\t(a.title.toLowerCase() >= b.title.toLowerCase() ? 1 : -1)\n\t\t);\n\t} else if (sortField === 'price') {\n\t\tnewPizzas = newPizzas.sort((a, b) => orderType ?\n\t\t\ta.price - b.price :\n\t\t\tb.price - a.price\n\t\t);\n\t}\n\n\tif (filters.searchText) {\n\t\tconst findExpression = new RegExp(`${filters.searchText}`, 'i');\n\t\tnewPizzas = newPizzas.filter(item => findExpression.test(item.title));\n\t}\n\n\treturn newPizzas;\n};"],"mappings":"AACA,SAASA,SAAT,QAA0B,oBAA1B;AAGA,OAAO,MAAMC,mBAAmB,GAAG,CAACC,KAAD,EAAsBC,OAAtB,KAAqE;EAAA;;EACvG,MAAMC,SAAS,sBAAGJ,SAAS,CAACK,IAAV,CAAeC,IAAI,IAAIA,IAAI,CAACC,IAAL,KAAcJ,OAAO,CAACK,QAA7C,CAAH,oDAAG,gBAAwDC,YAAxD,CAAqEC,OAArE,CAA6E,GAA7E,EAAkF,EAAlF,CAAlB;EACA,MAAMC,SAAS,uBAAGX,SAAS,CAACK,IAAV,CAAeC,IAAI,IAAIA,IAAI,CAACC,IAAL,KAAcJ,OAAO,CAACK,QAA7C,CAAH,qDAAG,iBAAwDC,YAAxD,CAAqEG,QAArE,CAA8E,GAA9E,CAAlB;EAEA,IAAIC,SAAuB,GAAG,CAAC,GAAGX,KAAJ,CAA9B;;EAEA,IAAIC,OAAO,CAACW,QAAR,KAAqB,IAAzB,EAA+B;IAC9BD,SAAS,GAAGA,SAAS,CAACE,MAAV,CAAiBT,IAAI,IAAIA,IAAI,CAACQ,QAAL,KAAkBX,OAAO,CAACW,QAAnD,CAAZ;EACA;;EAED,IAAIV,SAAS,KAAK,QAAlB,EAA4B;IAC3BS,SAAS,GAAGA,SAAS,CAACG,IAAV,CAAe,CAACC,CAAD,EAAIC,CAAJ,KAAUP,SAAS,GAC7CM,CAAC,CAACE,MAAF,GAAWD,CAAC,CAACC,MADgC,GAE7CD,CAAC,CAACC,MAAF,GAAWF,CAAC,CAACE,MAFF,CAAZ;EAIA,CALD,MAKO,IAAIf,SAAS,KAAK,OAAlB,EAA2B;IACjCS,SAAS,GAAGA,SAAS,CAACG,IAAV,CAAe,CAACC,CAAD,EAAIC,CAAJ,KAAUP,SAAS,GAC5CO,CAAC,CAACE,KAAF,CAAQC,WAAR,MAAyBJ,CAAC,CAACG,KAAF,CAAQC,WAAR,EAAzB,GAAiD,CAAjD,GAAqD,CAAC,CADV,GAE5CJ,CAAC,CAACG,KAAF,CAAQC,WAAR,MAAyBH,CAAC,CAACE,KAAF,CAAQC,WAAR,EAAzB,GAAiD,CAAjD,GAAqD,CAAC,CAF5C,CAAZ;EAIA,CALM,MAKA,IAAIjB,SAAS,KAAK,OAAlB,EAA2B;IACjCS,SAAS,GAAGA,SAAS,CAACG,IAAV,CAAe,CAACC,CAAD,EAAIC,CAAJ,KAAUP,SAAS,GAC7CM,CAAC,CAACK,KAAF,GAAUJ,CAAC,CAACI,KADiC,GAE7CJ,CAAC,CAACI,KAAF,GAAUL,CAAC,CAACK,KAFD,CAAZ;EAIA;;EAED,IAAInB,OAAO,CAACoB,UAAZ,EAAwB;IACvB,MAAMC,cAAc,GAAG,IAAIC,MAAJ,CAAY,GAAEtB,OAAO,CAACoB,UAAW,EAAjC,EAAoC,GAApC,CAAvB;IACAV,SAAS,GAAGA,SAAS,CAACE,MAAV,CAAiBT,IAAI,IAAIkB,cAAc,CAACE,IAAf,CAAoBpB,IAAI,CAACc,KAAzB,CAAzB,CAAZ;EACA;;EAED,OAAOP,SAAP;AACA,CAjCM"},"metadata":{},"sourceType":"module"}
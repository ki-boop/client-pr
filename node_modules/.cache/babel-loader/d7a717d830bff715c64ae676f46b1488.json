{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { PizzaStateErrors } from './types';\nimport { createPizza, findAllPizzas, updatePizza, updatePizzaGroupPhoto } from './asyncActions';\nimport { Status } from '../types';\nimport { castPizzaItemsToPizzaViews } from './utils/cast-pizza-items-to-views';\nimport { findPizzasByFilters } from './utils/find-pizzas-by-filters';\nconst initialState = {\n  items: [],\n  pizzaViews: [],\n  pizzaViewsByFilters: [],\n  status: Status.NEVER,\n  errorMessage: null\n};\nconst pizzaSlice = createSlice({\n  name: 'pizza',\n  initialState,\n  reducers: {\n    setItemsByFilters(state, action) {\n      state.pizzaViewsByFilters = findPizzasByFilters([...state.pizzaViews], action.payload);\n      state.status = Status.SUCCESS;\n    },\n\n    resetPizzaStatus(state) {\n      state.status = Status.NEVER;\n      state.errorMessage = null;\n    }\n\n  },\n  extraReducers: builder => {\n    builder.addCase(findAllPizzas.fulfilled, (state, action) => {\n      state.items = action.payload.map(item => ({ ...item,\n        imageUrl: `${process.env.REACT_APP_FILE_SYSTEM_SERVER_URL}${item.imageUrl}`\n      }));\n      state.pizzaViews = castPizzaItemsToPizzaViews([...state.items]);\n      state.pizzaViewsByFilters = state.pizzaViews;\n      state.status = Status.SUCCESS;\n    });\n    builder.addCase(findAllPizzas.rejected, state => {\n      state.items = [];\n      state.pizzaViews = [];\n      state.pizzaViewsByFilters = [];\n      state.status = Status.ERROR;\n    });\n    builder.addCase(findAllPizzas.pending, state => {\n      state.status = Status.LOADING;\n    });\n    builder.addCase(createPizza.fulfilled, state => {\n      state.status = Status.SUCCESS;\n      state.errorMessage = null;\n    });\n    builder.addCase(createPizza.rejected, state => {\n      state.status = Status.ERROR;\n      state.errorMessage = PizzaStateErrors.ALREADY_EXIST;\n    });\n    builder.addCase(createPizza.pending, state => {\n      state.status = Status.LOADING;\n      state.errorMessage = null;\n    });\n    builder.addCase(updatePizza.fulfilled, (state, action) => {\n      state.items = state.items.map(item => {\n        if (item.id === action.payload.id) {\n          return { ...action.payload,\n            imageUrl: `${process.env.REACT_APP_FILE_SYSTEM_SERVER_URL}${action.payload.imageUrl}`\n          };\n        }\n\n        return item;\n      });\n      state.status = Status.SUCCESS;\n      state.errorMessage = null;\n    });\n    builder.addCase(updatePizzaGroupPhoto.fulfilled, (state, action) => {\n      state.items = state.items.map(item => {\n        if (item.title === action.payload[0].title) {\n          return { ...item,\n            imageUrl: `${process.env.REACT_APP_FILE_SYSTEM_SERVER_URL}${action.payload[0].imageUrl}`\n          };\n        }\n\n        return item;\n      });\n      state.status = Status.SUCCESS;\n      state.errorMessage = null;\n    });\n  }\n});\nexport const {\n  setItemsByFilters,\n  resetPizzaStatus\n} = pizzaSlice.actions;\nexport default pizzaSlice.reducer;","map":{"version":3,"names":["createSlice","PizzaStateErrors","createPizza","findAllPizzas","updatePizza","updatePizzaGroupPhoto","Status","castPizzaItemsToPizzaViews","findPizzasByFilters","initialState","items","pizzaViews","pizzaViewsByFilters","status","NEVER","errorMessage","pizzaSlice","name","reducers","setItemsByFilters","state","action","payload","SUCCESS","resetPizzaStatus","extraReducers","builder","addCase","fulfilled","map","item","imageUrl","process","env","REACT_APP_FILE_SYSTEM_SERVER_URL","rejected","ERROR","pending","LOADING","ALREADY_EXIST","id","title","actions","reducer"],"sources":["/Users/kirillkarpakov/WebstormProjects/client-pr/src/store/pizza/slice.ts"],"sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { IPizzaSliceState, ISetPizzasByFilters, PizzaStateErrors } from './types';\nimport { createPizza, findAllPizzas, updatePizza, updatePizzaGroupPhoto } from './asyncActions';\nimport { Status } from '../types';\nimport { castPizzaItemsToPizzaViews } from './utils/cast-pizza-items-to-views';\nimport { findPizzasByFilters } from './utils/find-pizzas-by-filters';\n\n\nconst initialState: IPizzaSliceState = {\n\titems: [],\n\tpizzaViews: [],\n\tpizzaViewsByFilters: [],\n\tstatus: Status.NEVER,\n\terrorMessage: null\n};\n\nconst pizzaSlice = createSlice({\n\tname: 'pizza',\n\tinitialState,\n\treducers: {\n\t\tsetItemsByFilters(state, action: PayloadAction<ISetPizzasByFilters>) {\n\t\t\tstate.pizzaViewsByFilters = findPizzasByFilters([...state.pizzaViews], action.payload);\n\t\t\tstate.status = Status.SUCCESS;\n\t\t},\n\n\t\tresetPizzaStatus(state) {\n\t\t\tstate.status = Status.NEVER;\n\t\t\tstate.errorMessage = null;\n\t\t}\n\t},\n\textraReducers: (builder) => {\n\t\tbuilder.addCase(findAllPizzas.fulfilled, (state, action) => {\n\t\t\tstate.items = action.payload.map(item => ({\n\t\t\t\t...item,\n\t\t\t\timageUrl: `${process.env.REACT_APP_FILE_SYSTEM_SERVER_URL}${item.imageUrl}`\n\t\t\t}));\n\t\t\tstate.pizzaViews = castPizzaItemsToPizzaViews([...state.items]);\n\t\t\tstate.pizzaViewsByFilters = state.pizzaViews;\n\t\t\tstate.status = Status.SUCCESS;\n\t\t});\n\n\t\tbuilder.addCase(findAllPizzas.rejected, (state) => {\n\t\t\tstate.items = [];\n\t\t\tstate.pizzaViews = [];\n\t\t\tstate.pizzaViewsByFilters = [];\n\t\t\tstate.status = Status.ERROR;\n\t\t});\n\n\t\tbuilder.addCase(findAllPizzas.pending, (state) => {\n\t\t\tstate.status = Status.LOADING;\n\t\t});\n\n\t\tbuilder.addCase(createPizza.fulfilled, (state) => {\n\t\t\tstate.status = Status.SUCCESS;\n\t\t\tstate.errorMessage = null;\n\t\t});\n\n\t\tbuilder.addCase(createPizza.rejected, (state) => {\n\t\t\tstate.status = Status.ERROR;\n\t\t\tstate.errorMessage = PizzaStateErrors.ALREADY_EXIST;\n\t\t});\n\n\t\tbuilder.addCase(createPizza.pending, (state) => {\n\t\t\tstate.status = Status.LOADING;\n\t\t\tstate.errorMessage = null;\n\t\t});\n\n\t\tbuilder.addCase(updatePizza.fulfilled, (state, action) => {\n\t\t\tstate.items = state.items.map(item => {\n\t\t\t\tif (item.id === action.payload.id) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\t...action.payload,\n\t\t\t\t\t\timageUrl: `${process.env.REACT_APP_FILE_SYSTEM_SERVER_URL}${action.payload.imageUrl}`\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\treturn item;\n\t\t\t});\n\t\t\tstate.status = Status.SUCCESS;\n\t\t\tstate.errorMessage = null;\n\t\t});\n\n\t\tbuilder.addCase(updatePizzaGroupPhoto.fulfilled, (state, action) => {\n\t\t\tstate.items = state.items.map(item => {\n\t\t\t\tif (item.title === action.payload[0].title) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\t...item,\n\t\t\t\t\t\timageUrl: `${process.env.REACT_APP_FILE_SYSTEM_SERVER_URL}${action.payload[0].imageUrl}`\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\treturn item;\n\t\t\t});\n\t\t\tstate.status = Status.SUCCESS;\n\t\t\tstate.errorMessage = null;\n\t\t});\n\t}\n});\n\nexport const {setItemsByFilters, resetPizzaStatus} = pizzaSlice.actions;\nexport default pizzaSlice.reducer;"],"mappings":"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"},"metadata":{},"sourceType":"module"}